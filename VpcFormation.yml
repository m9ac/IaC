---
AWSTemplateFormatVersion: "2010-09-09"
Description: A template to create two VPCs with public subnets and establish VPC peering between them.

Resources:
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.19.0.0/16
      Tags:
        - Key: Name
          Value: AutoVPC1
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AutoVPC1-IGW

  AttachGateway1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC1
      InternetGatewayId: !Ref InternetGateway1

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.19.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AutoVPC1-PublicSubnet

  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: AutoVPC1-PublicRouteTable

  PublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway1

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable1

  VPC2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.20.0.0/16
      Tags:
        - Key: Name
          Value: AutoVPC2
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway2:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AutoVPC2-IGW

  AttachGateway2:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC2
      InternetGatewayId: !Ref InternetGateway2

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC2
      CidrBlock: 10.20.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AutoVPC2-PublicSubnet

  PublicRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC2
      Tags:
        - Key: Name
          Value: AutoVPC2-PublicRouteTable

  PublicRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway2

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable2

  VPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      PeerVpcId: !Ref VPC2
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: VPC1-to-VPC2-Peering

  RouteToPeerVPCFromVPC1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      DestinationCidrBlock: 10.20.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeeringConnection

  RouteToPeerVPCFromVPC2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable2
      DestinationCidrBlock: 10.19.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeeringConnection

Outputs:
  VPC1Id:
    Description: "The ID of the first VPC"
    Value: !Ref VPC1

  VPC2Id:
    Description: "The ID of the second VPC"
    Value: !Ref VPC2

  VPCPeeringConnectionId:
    Description: "The ID of the VPC Peering Connection"
    Value: !Ref VPCPeeringConnection